const { Thought, User } = require('../models');

// Create a thought
// POST:/api/thoughts
const createThought = async (req, res) => {
    try {
        const newThought = await Thought.create(req.body);
        if (newThought) {
            try {
                const pushThoughtToUser = await User.findOneAndUpdate(
                    {_id: req.body.userId},
                    { $addToSet: { thoughts: newThought } },
                    { new: true }
                );
                if (pushThoughtToUser) res.json(pushThoughtToUser);
                else res.status(404).json({ message: 'No user witih that ID' });
            } catch (err) {
                res.status(500).json({ message: err });
            }
        } else {
            res.status(500).json({ message: err });
        }
    } catch (err) {
        console.log(err);
        res.status(500).json(err);
    }
};

// Get all thoughts
// GET:/api/thoughts
const getThoughts = async (req, res) => {
    try {
        const thoughts = await Thought.find();
        if (thoughts) res.json(thoughts);
        else res.status(404).json({ message: false });
    } catch (err) {
        res.status(500).json({ message: err });
    }
};

// Get a thought
// GET:/api/thoughts/thoughtId
const getSingleThought = async (req, res) => {
    try {
        const thought = await Thought.findOne({ _id: req.params.thoughtId }).select('-__v');
        if (thought) res.json(thought);
        else res.status(404).json({ message: 'No thought with that ID' });
    } catch (err) {
        res.status(500).json({ message: err });
    }
};

// Update a thought
// PUT:/api/thoughts/thoughtId
const updateThought = async (req, res) => {
    try {
        const thought = await Thought.findOneAndUpdate(
            { _id: req.params.thoughtId },
            { $set: req.body },
            { runValidators: true, new: true }
        );
        if (thought) res.json(thought);
        else res.status(404).json({ message: 'No thought with this id!' });
    } catch (err) {
        res.status(500).json({ message: err });
    }
};

// Delete a thought
// DELETE:/api/thoughts/thoughtId
const deleteThought = async (req, res) => {
    try {
        const delThought = await Thought.findOneAndDelete({ _id: req.params.thoughtId });
        if (delThought) res.json({ message: 'Thought deleted.', thought: delThought });
        else res.status(404).json({ message: 'No thought with that ID' });
    } catch (err) {
        res.status(500).json({ message: err });
    }
};

/* ======================== REACTIONS ======================== */

// Add a Reaction
// POST:/api/thoughts/:thoughtID/reactions
const addReaction = async (req, res) => {
    try {
        const thought = await Thought.findOneAndUpdate(
            { _id: req.params.thoughtId },
            { $addToSet: { reactions: req.body } },
            { runValidators: true, new: true }
        )
        if (thought) res.json(thought)
        else res.status(404).json({ message: 'No thought found with that ID :(' })
    } catch (err) {
        res.status(500).json({ message: err });
    }
};

// Delete a Reaction
// DELETE:/api/thoughts/:thoughtId/reactions/:reactionId
const deleteReaction = async (req, res) => {
    try {
        // When pulling this reaction out of the array, we need to tell
        // it what field to match because reactionId is not autogenerated by MongoDB
        const thought = await Thought.findOneAndUpdate(
            { _id: req.params.thoughtId },
            { $pull: { reactions: { reactionId: req.params.reactionId } } }, // <-- this is what I mean
            { runValidators: true, new: true }
        );
        if (thought) res.json(thought);
        else res.status(404).json({ message: 'No thought found with that ID :(' })
    } catch (err) {
        res.status(500).json({ message: err });
    }
};


module.exports = {
    getThoughts,
    getSingleThought,
    createThought,
    updateThought,
    deleteThought,
    addReaction,
    deleteReaction,
};